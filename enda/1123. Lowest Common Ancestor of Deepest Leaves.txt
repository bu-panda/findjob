有个一模一样的

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lcaDeepestLeaves(self, root: TreeNode) -> TreeNode:
        if root is None:
            return None
        
        return self.traverse_depth(root)[1]

    
    def traverse_depth(self, node):
        if node is None:
            return 0, None
        
        ld, left_branch = self.traverse_depth(node.left)
        rd, right_branch = self.traverse_depth(node.right)
        
        if ld == rd:
            return  ld + 1, node
        elif ld > rd:
            return ld + 1, left_branch
        else:
            return  rd + 1, right_branch
        
        
    
    
        
        
        