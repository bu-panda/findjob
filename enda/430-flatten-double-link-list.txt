"""
# Definition for a Node.
class Node:
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""

遇到一个有child节点的，就需要把它之后的的那个存在stack里边，然后连接本节点和子节点，并且转移去处理子节点
注意cache可能会pop出一个None

class Solution:
    def flatten(self, head: 'Node') -> 'Node':
        if head is None:
            return None
        
        cur = head
        cache = []
        while cur is not None:
            if cur.child is not None:
                tmp = cur.next
                cache.append(tmp)
                child = cur.child
                cur.next = child
                child.prev = cur
                cur.child = None
                cur = child
            elif cur.next is None and cache:
                tmp = cache.pop()
                cur.next = tmp
                if tmp is not None:
                    tmp.prev = cur
                cur = tmp
            else:
                cur = cur.next
        
        return head
            
            